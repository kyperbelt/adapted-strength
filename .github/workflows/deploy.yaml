name: deploy-app
# id: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - actions

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ secrets.AWS_PRIVATE_DEPLOY_KEY }}
      HOST: ${{ secrets.AWS_INSTANCE_URL }}
      USER: ${{ secrets.AWS_INSTANCE_USER }}

    # outputs:
    #   # jar: ${{ steps.out_jar.outputs.JAR }}
    #   # prop: ${{ steps.out_jar.outputs.APP_PROP }}
    #   front : ${{ steps.out_front.outputs.FRONT }}
    #   app : ${{ steps.out_app.outputs.APP }}
    #   # compose: ${{ steps.out_jar.outputs.COMPOSE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Install java & npm
      #   run: |
      #     sudo apt-get update
      #     # sudo apt-get remove -y openjdk-11-jdk
      #     # sudo apt-get install -y openjdk-17-jdk
      #     # Installed
      #     # sudo apt-get install -y npm

      - name: Build and compress jar
        run: |
          cd authorization
          ./gradlew build -Dorg.gradle.java.home=$JAVA_HOME_17_X64
          cd ..
          rm ./authorization/build/libs/*plain.jar
          tar -czf app.tar.gz authorization/build/libs/*.jar authorization/build/resources/main/application.properties authorization/compose.yaml

      # - name: Remove plain jar
      #   run: |
      #     rm ./authorization/build/libs/*plain.jar

      # - name: Output app
      #   id: out_app
      #   run: |
      #     tar -czf app.tar.gz authorization/build/libs/*.jar authorization/build/resources/main/application.properties authorization/compose.yaml

      # - name: Output jar 
      #   id: out_jar
      #   run: |
      #     echo "JAR=$(cat ./authorization/build/libs/*.jar)" >> $GITHUB_OUTPUT 
      #     echo "APP_PROP=$(cat ./authorization/build/resources/main/application.properties)" >> $GITHUB_OUTPUT 
      #     echo "COMPOSE=$(cat ./authorization/compose.yaml)" >> $GITHUB_OUTPUT 

      - name: Compile and compress front end
        id: out_front
        run: |
          cd adapted-strength/frontend/adapted_strength-app
          npm install
          npm run build
          tar -czf web.tar.gz build 
          cd ..
          cd ..

      - name: Write ssh key to file
        run: |
          echo $SSH_KEY > "~/.ssh/key.pem"

      - name: Set up known hosts file
        run: |
          ssh-keyscan $HOST >> ~/.ssh/known_hosts

      - name: Copy build files to instance
        run: |
          echo "put web.tar.gz tmp/web.tar.gz" >> batchfile
          echo "put app.tar.gz tmp/app.tar.gz" >> batchfile

          sftp -i "~/.ssh/key.pem" -b batchfile "$USER@$HOST"
  